import mathpython基本语句练习

1.安装python-3.6-amd64.exe软件包（最新版也可以） ， 安装时将默认安装目录修改为 c:\python36
  安装完毕后，启动python3.6程序组中的 IDLE 。在IDLE中练习python如下的基本语句

2. 基本运算符  + - * /  // **  %
注：(1) >>> 是 IDLE中的提示符，练习时不用输入，只输入>>>后面的内容.
   (2) #后面是注释， 练习时不用输入 #后的内容
   (3) >>>后面不能有空格。例如>>>  1+2 将报错， 必须输入为>>>1+2
   (4)所有的符号都应是英文字符，不要输入中文状态下的中文标点符号

>>>1+2
>>>10+30.5
>>>10-30.5
>>>10*30.5

>>>x=14; y=4       #用两条语句定义了两个变量x, y。在同一行包含两条语句时，中间用分号; 隔开 
>>>x/y             #普通除法, 结果 3.5
>>>x//y            #//是整除，只保留商的整数部分，结果为3

>>>2**4            # **是次方
>>>2**(1/2)        # 2开根号
>>>10**1000        # 10的 1000次方。表明python可容纳很大的整数

>>>5%2             #%是求余数   
>>>23%5            
     


3.基本的关系比较 >  <  >=  <=  == != 
逻辑运算 与and  , 或 or , 非 not

x=14; y=4; z=2
x>y    # True, 表示结果为真，条件成立
x<y    # False, 表示结果为假，条件不成立
x==y   # 相等比较 。注意相对比较是两个=
x!=y   #不相等比较


5>=4

x>y and y>z    #and与运算，要求两个条件都成立，结果才为真
z<y<x          # 上式也可改写为 本式，效果一样，注意C语言中不允许这样的表达式写法。

x>y and y<z   # 与运算时有一个条件不成立，结果就为假

x>y or y<z    # 或运算时只要有一个条件成立，结果就为真

not x>y       #非运算 。 not True 为假， not False为真
not True      # 注意True/ False要区分大小写，不要输入为 true/false
not False

4. 输入input() , 输出 print()语句
x=input('请输入一个数:')       #例如输入23
x                              # 显示x的值为'23', 注意两侧有单引号，表明x是字符串，不是数值
type(x)                        # 用type函数测x的数据类型，结果<class 'str'> ， 表示x是str字符串类型
x+10                           #将显示红色错误信息，因为'23'+10 不合法，不能将 字符串+整数

y=float(x)                    # 用float函数将x转为浮点小数，则y=23
type(y)                       # <class 'float'> , 表示y是 float浮点小数
y+10                          # y+10就不会报错了

print(x,y)                    # 下面三行是几种不同的输出格式
print('x=',x,'y=',y)
print('x={0},y={1}'.format(x,y))   #{0}是第0个参数，对应x. {1}是第1个参数，对应y


5.常用函数练习 abs, round, trunc, pow math.sqrt,  math.sin
abs(-10)            #绝对值
round(3.1415)       #四舍五入取整
round(3.1415,2)     #四舍五入，保留2位小数
round(3.1415,3)  

2**5
pow(2,5)           #次方函数
pow(2,1/3)          

import  math
math.trunc(8.6)          #截断小数，只保留整数部分

math.sqrt(2)            #开根号
math.sqrt(16)

print(math.pi)
math.sin(30/360*2*math.pi)
math.sin(math.radians(30))

math.log10(10)      #log10以10为底的对数，即常用对数
math.log10(100)

print(math.e)
math.log(2)        #以e为底，自然对数
math.log(math.e)

math.log2(2)       #log2是以2为底
math.log2(16)


6.条件语句if ,  循环语句 for / while 练习
条件if语句
>>>x=5
>>>if x>10:
  print('x>10')       #条件不成立，本句没有执行
>>>if x>1:
  print('x>1')       #条件成立，本句执行


循环for语句
注： range(5)产生一个0,1，..4的序列，不含终值5. 

>>>for x  in  range(5):
  print(x)        # 将依次输出0,1，..4

下面分成3条语句执行，所以写了3个提示符。不要将所有语句都写在一个提示符>>>下
>>>s=0

>>>for  x  in  range(101):
  s=s+x

>>>print('1+2+..100=',s)

上面是在idle的命令行中练习，这些语句都没有保存。下面将上面的求和语句保存为一个程序。
(1) 选择"File/New File", 创建一个新的程序录入窗口
(2)在新窗口中录入以下源代码：

s=0
for  x  in  range(101):    # 后面必须有冒号 :
  s=s+x                    #此行必须缩进。录入时按tab键将自动缩进4个空格
print('1+2+..100=',s)

(3) 将程序保存为 p1.py, 再"Run/Run module"运行程序.


再次"File/New File"新建一个程序，录入下面的源代码。练习while循环语句

s=0
x=1
while x<=100:     # 后面必须有冒号 :
  s=s+x           # 这一行必须缩进
  x=x+1           # 这一行也必须缩进，且和上一行缩进距离相同
print('1+2+..100=',s)

将程序保存为 p2.py, 再"Run/Run module"运行程序


7. 调试 课本P15 上部的问题1 阶乘程序

8. 调试 课本P15 下部的问题2 combination求组合数的函数

9. 调试 课本P19 平方根运算1 程序。

10.调试 课本P21 平方根运算2 程序。









 

